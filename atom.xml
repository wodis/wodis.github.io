<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Open Tech Pub]]></title>
  <link href="http://wodis.github.io/atom.xml" rel="self"/>
  <link href="http://wodis.github.io/"/>
  <updated>2015-06-02T13:25:46+08:00</updated>
  <id>http://wodis.github.io/</id>
  <author>
    <name><![CDATA[Wu Di]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[提升Gradle性能]]></title>
    <link href="http://wodis.github.io/blog/2015/06/02/ti-sheng-gradle-xing-neng/"/>
    <updated>2015-06-02T11:42:39+08:00</updated>
    <id>http://wodis.github.io/blog/2015/06/02/ti-sheng-gradle-xing-neng</id>
    <content type="html"><![CDATA[<p>是不是感觉一整天都在等着Android Studio编译完成？我也是</p>

<p>幸亏现在有方法让编译速度提升一些。虽然这些操作仍然有一定的风险，但还是值得尝试一下。
当我修改了一小部分的代码后，使用这个方法，编译速度直接减少了2.5秒。</p>

<p>Android现在通常使用Gradle进行编译。发布这篇文章的时候，默认的Gradle版本是2.2。
最新的为2.4，它比之前的版本已经有了很大的提升。</p>

<p>有两种方法配制新版Gradle，直接手动修改build脚本，或者更改Android Studio的配置。</p>

<ol>
<li><p>手动修改build脚本，通过在项目根目录的build.grade中添加以下代码</p>

<p> task wrapper(type: Wrapper) {
     gradleVersion = &lsquo;2.4&rsquo;
 }</p></li>
</ol>


<p>现在打开终端并且运行./gradlew，它会自动下载并安装Gradle 2.4作为本地版本。
<a href="http://gradle.org/docs/current/userguide/gradle_wrapper.html">官方文档</a></p>

<ol>
<li>如果打算修改Android Studio的配制，需要打开Project Structure Dialog（OS X: ⌘+;），
在左边的列表中选择Project，然后修改Gradle version为2.4。单击OK，Android Studio会自动安装和同步Gradle的配置。</li>
</ol>


<p><img src="http://www.openwudi.com/images/2015/1433219043.png" alt="1433219043.png" /></p>

<p>下一步是确保Gradle守护进程和并行编译可用。使用守护进程编译速度会提高，因为它并不会每次都编译完整的项目。
并行编译会将项目分成多模块编译，这样可以提升大型多模块项目的编译速度。</p>

<p>当然这些设置需要添加到.gradle目录的gradle.properties中。(i.e., ~/.gradle/gradle.properties)</p>

<pre><code>org.gradle.daemon=true
org.gradle.parallel=true
</code></pre>

<p>守护进程已经在Android Studio中开启，这样做是为了在终端中使用。</p>

<p>注意：并行编译可能导致一些项目不安全。原因是需要你所有的项目是解耦的，不然会编译失败。<a href="http://gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects">多模块编译</a>
认真测试所有的build variants，保证都可以正常工作。</p>

<p>添加以下代码可以增加JVM的最大堆内存：</p>

<pre><code>org.gradle.jvmargs=-Xmx768m
org.gradle.java.home=/path/to/jvm
</code></pre>

<p>其他的gradle.properties配制，可以参考<a href="http://gradle.org/docs/current/userguide/userguide_single.html#sec:gradle_configuration_properties">官方文档</a>。</p>

<p>最后的更改是增量打包dex，这是一个实验性的功能，默认是不开启的。它可能会导致你编译失败，但是还是建议你去试一下，看看你能否使用。</p>

<p>增加以下代码到app模块的build.gradle中：</p>

<pre><code>dexOptions {
        incremental true
}
</code></pre>

<p>如果你有其他的技巧欢迎与我交流。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发中的MVVM模式]]></title>
    <link href="http://wodis.github.io/blog/2015/06/01/mvvm-mo-shi/"/>
    <updated>2015-06-01T18:27:14+08:00</updated>
    <id>http://wodis.github.io/blog/2015/06/01/mvvm-mo-shi</id>
    <content type="html"><![CDATA[<p>从去年开始我们的Android项目就已经从传统的MVC架构切换为Model-View-Presenter（MVP）架构，使得整个分层更加清晰。
Presenter作为整个逻辑的控制者，与Controller的区别在于它并不包含任何的显示逻辑，只处理网络请求和数据填充操作，
并通知View何时更新，当View收到更新请求，将数据根据需求展示在不同View中。</p>

<p>今年的Google IO为Android开发者介绍了一个非常棒的新框架，允许将视图绑定（Binding）到任意对象的成员变量上。
当成员变量更新，框架会通知视图 <strong>自动更新</strong>。</p>

<p>这个系统相当强大，让我们可以使用一种在Windows世界常见的开发模式Model-View-ViewModel (MVVM)。
我们先熟悉一下基本的概念，对于整个架构的理解很重要，并且看它如何使你的app更好。</p>

<p><img src="http://www.openwudi.com/images/2015/1433142732.png" alt="MVVM设计模式" /></p>

<p>MVVM设计模式包含3部分：</p>

<ul>
<li>Model – 表示你的业务逻辑</li>
<li>View – 显示的内容</li>
<li>ViewModel – 将View和Model联系到一起</li>
</ul>


<p>ViewModel接口做两件事：行为(Actions)和数据(Data)。行为改变底层的模型（点击事件，文本变化事件等），数据则表示这个模型的内容。</p>

<p>例如，一个拍卖系统的ViewModel数据可能是图片、标题、描述和价格。行为可能是竞拍、购买、或者联系卖家。</p>

<p>传统的Android架构中，控制器（Controller）将数据直接赋值给View，再从Activity中找到View，更新内容。
使用MVVM模式，ViewModel改变内容并通知绑定（Binding）框架内容已经变化。框架将会自动更新被绑定的View。
这两个容器只通过数据接口和命令进行松散耦合。</p>

<p>除了看起来智能的View绑定，也让测试变得方便。</p>

<p>因为ViewModel并不依赖于View，你可以只测试一个ViewModel，甚至不需要View存在。通过适当的依赖注入，测试就很简单了。</p>

<p>希望你已经理解了MVVM模式的基本概念，并且已经了解使用它的好处。后续我会发布实现MVVM的代码，和一些绑定框架的使用技巧。</p>

<p>参考资料：</p>

<ol>
<li><a href="http://www.codeproject.com/Articles/66585/Comparison-of-Architecture-presentation-patterns-M">Comparison of Architecture presentation patterns MVP(SC),MVP(PV),PM,MVVM and MVC</a></li>
<li><a href="http://konmik.github.io/introduction-to-model-view-presenter-on-android.html?utm_source=Android+Weekly&amp;utm_campaign=5589504b56-Android_Weekly_148&amp;utm_medium=email&amp;utm_term=0_4eb677ad19-5589504b56-337845481">Introduction to Model-View-Presenter on Android</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python Learning]]></title>
    <link href="http://wodis.github.io/blog/2015/05/27/python-learning/"/>
    <updated>2015-05-27T14:23:19+08:00</updated>
    <id>http://wodis.github.io/blog/2015/05/27/python-learning</id>
    <content type="html"><![CDATA[<h1>为什么我要用Python</h1>

<p>最近整理了一下微人脉现有的脚本，整体都基于PHP编写，然后通过Crontab做定时任务。
但是，PHP来作为脚本的话，语法并不简洁，尝试使用Python。
两者比较各有优势，Python的可读性非常好，对于OO化繁为简，就语法而言比PHP更容易适应（当然可能是我主观这么认为）。
直接摘一个总结：</p>

<ul>
<li>Python is more readable, and more general purpose</li>
<li>PHP has awful backward compatibility</li>
<li>PHP has a lower barrier to entry</li>
<li>Most inexpensive web-hosters support PHP, but not Python</li>
<li>PHP has far more pre-writen scrīpts available</li>
<li>Newer versions of mod_python require Apache 2.0, which few hosters have</li>
<li>There is more demand for PHP developers, than Python developers</li>
</ul>


<h1>Python学习工程</h1>

<p><a href="https://github.com/wodis/python-learning">Github Python Project</a></p>

<p><strong>目录</strong></p>

<ol>
<li>中文编码 encoding</li>
<li>变量类型 variable</li>
<li>条件语句 decision</li>
<li>循环语句 loop</li>
<li>日期和时间 date</li>
<li>函数 function</li>
<li>文件I/O</li>
<li>HTTP</li>
<li>JSON</li>
<li>Log</li>
<li>面向对象 OOP</li>
<li>多线程 Thread</li>
<li>Redis</li>
<li>MySQLdb</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nginx专题]]></title>
    <link href="http://wodis.github.io/blog/2015/02/19/nginxzhuan-ti/"/>
    <updated>2015-02-19T14:40:19+08:00</updated>
    <id>http://wodis.github.io/blog/2015/02/19/nginxzhuan-ti</id>
    <content type="html"><![CDATA[<p>起因：由于工作内容变化的原因，需要多了解后端所使用的技术。
但是一直没有时间去从头学习，过年在家抢红包无意间看见一篇用Nginx做代理并通过log自己动手做一个报警工具
<a href="http://mp.weixin.qq.com/s?__biz=MjM5NDMwNjMzNA==&amp;amp;amp;mid=203292077&amp;amp;amp;idx=3&amp;amp;amp;sn=815dcf56c4d60ef7251c7c18cfa0fc81&amp;amp;amp;3rd=MzA3MDU4NTYzMw==&amp;amp;amp;scene=6#rd">原文</a>。
所以这才从头开始搭一下Nginx。现在为学习Nginx做一个整合，争取过年期间快速浏览一遍。</p>

<hr />

<ul>
<li><a href="http://my.oschina.net/boonya/blog/286422">Nginx学习之一：从权威途径(wiki)了解Nginx</a></li>
<li><a href="http://my.oschina.net/boonya/blog/287189">Nginx学习之二：Nginx 学习地图梗概</a></li>
<li><a href="http://my.oschina.net/boonya/blog/287201">Nginx学习之三：对应平台的Nginx下载和安装</a></li>
<li><a href="http://my.oschina.net/boonya/blog/287265">Nginx学习之四：Nginx支持模块的安装及描述</a></li>
<li><a href="http://my.oschina.net/boonya/blog/287300">Nginx学习之五：Nginx第三方模块</a></li>
<li><a href="http://my.oschina.net/boonya/blog/287313">Nginx学习之六：Nginx配置操作导航</a></li>
<li><a href="http://my.oschina.net/boonya/blog/287322">Nginx学习之七：通过Nginx社区进行技术交流</a></li>
<li><a href="http://my.oschina.net/boonya/blog/287330">Nginx开发者学习资源攻略</a></li>
<li><a href="http://my.oschina.net/boonya/blog/288874">Nginx学习之九：实践学习指南</a></li>
<li><a href="http://my.oschina.net/boonya/blog/289423">Nginx学习之十：Nginx+Tomcat多站点访问默认主页问题</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git分支模型图]]></title>
    <link href="http://wodis.github.io/blog/2015/01/10/git-flow/"/>
    <updated>2015-01-10T15:58:07+08:00</updated>
    <id>http://wodis.github.io/blog/2015/01/10/git-flow</id>
    <content type="html"><![CDATA[<p><img src="http://www.openwudi.com/images/2015/1432791784.png" alt="git branch" /></p>

<p>上图为Vincent Driessen在2010年发布的“一个成功的Git分支模型”。其实基本的概念很清晰：</p>

<h3>开发分支（develop）</h3>

<p>这是主要的开发分支，所以的关于下一个版本的更改都应该在这个分支下完成。可以提交更改或者从其他分支合并一些功能。</p>

<h3>生产分支（master）</h3>

<p>这个分支表示最新发布或开发的代码。只从其他分支合并。</p>

<h3>特征分支（feature前缀）</h3>

<p>当需要进行一些琐碎功能开发的时候，可以创建一个feature，然后再合并到开发分支。</p>

<h3>发布分支（release前缀）</h3>

<p>当需要打包一个发布版本的时候，通常会从开发分支创建一个新的分支。也可以继续在这个分支下提交代码，等到需要发布的时候同时合并到开发分支和生产分支。</p>

<h3>补丁分支（hotfix前缀）</h3>

<p>当一个产品发布后遇到问题，将从生产分支创建一个补丁分支修复问题。修改完成后再合并回生产分支，进行发布。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux Command Line Tips]]></title>
    <link href="http://wodis.github.io/blog/2015/01/04/linux-command-line-tips/"/>
    <updated>2015-01-04T18:53:34+08:00</updated>
    <id>http://wodis.github.io/blog/2015/01/04/linux-command-line-tips</id>
    <content type="html"><![CDATA[<p>I just post some &lsquo;terminal&rsquo; things here, because I am getting tried to use GUI for my development and decide to change the method to manage Unix-based Mac OSX. As a developer, I have to shamed to say &lsquo;I am so much depend on GUI before working&rsquo;, that why this article is created.</p>

<h2>1.Try some simple</h2>

<p>date</p>

<p>cal</p>

<p>df - display free disk space</p>

<p>exit</p>

<p>man - format and display the on-line manual pages</p>

<p>which- locate a program file in the user&rsquo;s path</p>

<h2>2.Navigation</h2>

<p>pwd</p>

<p>cd</p>

<p>ls</p>

<p>file - determine file type</p>

<p>less - opposite of more</p>

<h2>3.File System</h2>

<p>cp</p>

<p>mv</p>

<p>mkdir</p>

<p>rm</p>

<h2>4.Authority and Progress</h2>

<p>chmod &ndash; change file modes or Access Control Lists</p>

<p>ps aux | grep vim</p>

<p>kill</p>

<h2>5.Search</h2>

<p>locate - find filenames quickly</p>

<p>find - walk a file hierarchy</p>

<p>grep - file pattern searcher</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于我]]></title>
    <link href="http://wodis.github.io/blog/2015/01/01/first-blog/"/>
    <updated>2015-01-01T16:07:32+08:00</updated>
    <id>http://wodis.github.io/blog/2015/01/01/first-blog</id>
    <content type="html"><![CDATA[<p><img src="http://tp2.sinaimg.cn/1690201701/50/5679941181/1" alt="my icon" /></p>

<p><strong>姓名：</strong> Di Wu</p>

<p><strong>微博：</strong> <a href="http://weibo.com/wodis">@讨厌茄子的老科特</a></p>

<p><strong>博客：</strong> <a href="http://www.openwudi.com">http://www.openwudi.com</a></p>

<p><strong>所在地：</strong> 北京</p>

<p><strong>就职于：</strong> 新浪微博</p>

<p><strong>教育经历：</strong> <code>2012~2013 Dublin City University</code>
<code>2006~2012 武汉大学</code></p>

<hr />

<p>2014年加入新浪微博，进行Java平台的研发工作，现担任新浪微博-微人脉项目工程师，完成Android客户端1.3以前版本，并切入服务器端开发到现在。2013年参加DCU的Kuali Student开源项目，经历了从调研，立项，到研发的整个过程，学业结束回国。</p>

<p>欢迎随时与我交流Android/Java开发中所遇到的问题。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google Guava Library Tips]]></title>
    <link href="http://wodis.github.io/blog/2014/09/02/google-guava-library-tips/"/>
    <updated>2014-09-02T18:58:38+08:00</updated>
    <id>http://wodis.github.io/blog/2014/09/02/google-guava-library-tips</id>
    <content type="html"><![CDATA[<h1>String</h1>

<ul>
<li>CharMatcher (which can be considered as a light form of JDK&rsquo;s Pattern+Matcher with string manipulation capabilities)</li>
<li>Joiner and MapJoiner (which are useful for joining iterables or arrays into string representations)</li>
<li>Splitter (which is split() of JDK on steroids).</li>
</ul>


<h3>CharMatcher.JAVA_LETTER_OR_DIGIT</h3>

<p>.countIn(&ldquo;&rdquo;)</p>

<p>.matchesAllOf(&ldquo;&rdquo;)</p>

<p>.matchesNoneOf(&ldquo;&rdquo;)</p>

<p>.negate()</p>

<p>.removeFrom(&ldquo;&rdquo;)</p>

<p>.retainFrom(&ldquo;&rdquo;)</p>

<p>.indexIn(&ldquo;&rdquo;)</p>

<p>.anyOf(&ldquo;&rdquo;)</p>

<p>.noneOf(&ldquo;&rdquo;)</p>

<p>.inRange(&lsquo;&rsquo;, &lsquo;&rsquo;)</p>

<p>.or(CharMatcher)</p>

<p>.and(CharMatcher)</p>

<h3>Joiner</h3>

<p>.on(&ldquo;&rdquo;)</p>

<p>.join(List)</p>

<p>.skipNulls()</p>

<p>.useForNull(&ldquo;&rdquo;)</p>

<h3>Splitter</h3>

<p>.on(&ldquo;&rdquo;)</p>

<p>.omitEmptyStrings()</p>

<p>.trimResults()</p>

<p>.split(&ldquo;&rdquo;)</p>

<p>.fixedLength(int)</p>

<h3>Strings</h3>

<p>.emptyToNull(&ldquo;&rdquo;)</p>

<p>.isNullOrEmpty(&ldquo;&rdquo;)</p>

<p>.repeat(&ldquo;&rdquo;, int)</p>

<p>.padEnd(&ldquo;&rdquo;, int, &lsquo;&rsquo;)</p>

<p>.padStart(&ldquo;&rdquo;, int, &lsquo;&rsquo;)</p>

<h1>Ordering</h1>

<p>This class is really useful if you need to order your Iterable, find the maximum/minimum element in your Iterable, find the index of an arbitrary element. It implements Comparator interface for backward compatibility..from(Comparator)</p>

<p>.sortedCopy(List)</p>

<p>.explicit(enum)</p>

<p>.usingToString()</p>

<p>.natural()</p>

<p>.binarySearch(List,Object)</p>

<p>.max(List)</p>

<p>.min(List)</p>

<p>.reverse()</p>

<p>.isOrdered()</p>

<p>.isStrictlyOrdered()</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Learning]]></title>
    <link href="http://wodis.github.io/blog/2014/07/01/git-learning/"/>
    <updated>2014-07-01T13:47:06+08:00</updated>
    <id>http://wodis.github.io/blog/2014/07/01/git-learning</id>
    <content type="html"><![CDATA[<h2>Git 工作流程</h2>

<p>一般工作流程如下：</p>

<ul>
<li>克隆 Git 资源作为工作目录。</li>
<li>在克隆的资源上添加或修改文件。</li>
<li>如果其他人修改了，你可以更新资源。</li>
<li>在提交前查看修改。</li>
<li>提交修改。</li>
<li>在修改完成后，如果发现错误，可以撤回提交并再次修改并提交。</li>
</ul>


<p><img src="http://www.openwudi.com/images/2015/1432807147.png" alt="工作流程" /></p>

<h2>Git 创建仓库</h2>

<p>使用您当前目录作为Git仓库，我们只需使它初始化。</p>

<pre><code>git init
</code></pre>

<p>使用指定目录作为Git仓库。</p>

<pre><code>git init newrepo
</code></pre>

<p>初始化后，在当前目录下会出现一个名为 .git 的目录，所有 Git 需要的数据和资源都存放在这个目录中。
如果当前目录下有几个文件想要纳入版本控制，需要先用 git add 命令告诉 Git 开始对这些文件进行跟踪，然后提交：</p>

<pre><code>$ git add *.c
$ git add README
$ git commit -m 'initial project version'
</code></pre>

<h3>从现有仓库克隆</h3>

<p>克隆仓库的命令格式为：</p>

<pre><code>git clone [url]
</code></pre>

<p>比如，要克隆 Ruby 语言的 Git 代码仓库 Grit，可以用下面的命令：</p>

<pre><code>$ git clone git://github.com/schacon/grit.git
</code></pre>

<p>执行该命令后，会在当前目录下创建一个名为grit的目录，其中包含一个 .git 的目录，用于保存下载下来的所有版本记录。
如果要自己定义要新建的项目目录名称，可以在上面的命令末尾指定新的名字：</p>

<pre><code>$ git clone git://github.com/schacon/grit.git mygrit
</code></pre>

<h2>Git 工作区、暂存区和版本库</h2>

<p>我们先来理解下Git 工作区、暂存区和版本库概念</p>

<ul>
<li>工作区：就是你在电脑里能看到的目录。</li>
<li>暂存区：英文叫stage, 或index。一般存放在"git目录"下的index文件（.git/index）中，所以我们把暂存区有时也叫作索引（index）。</li>
<li>版本库：工作区有一个隐藏目录.git，这个不算工作区，而是Git的版本库。</li>
</ul>


<p>下面这个图展示了工作区、版本库中的暂存区和版本库之间的关系：</p>

<p><img src="http://www.openwudi.com/images/2015/1432810388.jpg" alt="工作区、暂存区和版本库" /></p>

<p>图中左侧为工作区，右侧为版本库。在版本库中标记为 &ldquo;index&rdquo; 的区域是暂存区（stage, index），标记为 &ldquo;master&rdquo; 的是 master 分支所代表的目录树。</p>

<p>图中我们可以看出此时 &ldquo;HEAD&rdquo; 实际是指向 master 分支的一个"游标"。所以图示的命令中出现 HEAD 的地方可以用 master 来替换。</p>

<p>图中的 objects 标识的区域为 Git 的对象库，实际位于 &ldquo;.git/objects&rdquo; 目录下，里面包含了创建的各种对象及内容。</p>

<p>当对工作区修改（或新增）的文件执行 &ldquo;git add&rdquo; 命令时，暂存区的目录树被更新，同时工作区修改（或新增）的文件内容被写入到对象库中的一个新的对象中，而该对象的ID被记录在暂存区的文件索引中。</p>

<p>当执行提交操作（git commit）时，暂存区的目录树写到版本库（对象库）中，master 分支会做相应的更新。即 master 指向的目录树就是提交时暂存区的目录树。</p>

<p>当执行 &ldquo;git reset HEAD&rdquo; 命令时，暂存区的目录树会被重写，被 master 分支指向的目录树所替换，但是工作区不受影响。</p>

<p>当执行 &ldquo;git rm &ndash;cached <file>&rdquo; 命令时，会直接从暂存区删除文件，工作区则不做出改变。</p>

<p>当执行 &ldquo;git checkout .&rdquo; 或者 &ldquo;git checkout &ndash; <file>&rdquo; 命令时，会用暂存区全部或指定的文件替换工作区的文件。这个操作很危险，会清除工作区中未添加到暂存区的改动。</p>

<p>当执行 &ldquo;git checkout HEAD .&rdquo; 或者 &ldquo;git checkout HEAD <file>&rdquo; 命令时，会用 HEAD 指向的 master 分支中的全部或者部分文件替换暂存区和以及工作区中的文件。这个命令也是极具危险性的，因为不但会清除工作区中未提交的改动，也会清除暂存区中未提交的改动。</p>

<h2>Git 基本操作</h2>

<p>Git 的工作就是创建和保存你的项目的快照及与之后的快照进行对比。</p>

<h3>基本快照</h3>

<h4>git add</h4>

<p>git add 命令可将该文件添加到缓存，如我们添加以下两个文件：</p>

<pre><code>$ touch README
$ touch hello.php
$ ls
README      hello.php
$ git status -s
?? README
?? hello.php
$
</code></pre>

<p>git status 命令用于查看项目的当前状态。接下来我们执行 git add 命令来添加文件：</p>

<pre><code>$ git add README hello.php
</code></pre>

<p>现在我们再执行 git status，就可以看到这两个文件已经加上去了。</p>

<pre><code>$ git status -s
A  README
A  hello.php
$
</code></pre>

<p>新项目中，添加所有文件很普遍，可以在当前工作目录执行命令：git add .。
现在我们改个文件，再执行一下 git status：</p>

<pre><code>$ vim README
$ git status -s
AM README
A  hello.php
</code></pre>

<p>&ldquo;AM&rdquo; 状态的意思是，这个文件在我们将它添加到缓存之后又有改动。改动后我们在执行 git add 命令将其添加到缓存中：</p>

<pre><code>$ git add .
$ git status -s
A  README
A  hello.php
</code></pre>

<p>当你要将你的修改包含在即将提交的快照里的时候，需要执行 git add。</p>

<h4>git status</h4>

<p>git status 以查看在你上次提交之后是否有修改。
演示该命令的时候加了 -s 参数，以获得简短的结果输出。如果没加该参数会详细输出内容：</p>

<pre><code>$ git status
On branch master

Initial commit

Changes to be committed:
  (use "git rm --cached &lt;file&gt;..." to unstage)

    new file:   README
    new file:   hello.php
</code></pre>

<h4>git diff</h4>

<p>执行 git diff 来查看执行 git status 的结果的详细信息。
git diff 命令显示已写入缓存与已修改但尚未写入缓存的改动的区别。git diff 有两个主要的应用场景。</p>

<ul>
<li>尚未缓存的改动：git diff</li>
<li>查看已缓存的改动： git diff &ndash;cached</li>
<li>查看已缓存的与未缓存的所有改动：git diff HEAD</li>
<li>显示摘要而非整个 diff：git diff &ndash;stat</li>
</ul>


<p>修改 hello.php 文件中输入以下内容：</p>

<pre><code>$ git status -s
A  README
AM hello.php
$ git diff
diff --git a/hello.php b/hello.php
index e69de29..d1a9166 100644
--- a/hello.php
+++ b/hello.php
@@ -0,0 +1,3 @@
+&lt;?php
+echo 'www.openwudi.com';
+?&gt;
</code></pre>

<p>git status显示你上次提交更新至后所更改或者写入缓存的改动， 而 git diff 一行一行地显示这些改动具体是啥。
接下来我们来查看下 git diff &ndash;cached 的执行效果：</p>

<pre><code>$ git add hello.php
$ git status -s
A  README
A  hello.php
$ git diff --cached
diff --git a/README b/README
new file mode 100644
index 0000000..704cce7
--- /dev/null
+++ b/README
@@ -0,0 +1 @@
+openwudi.com
diff --git a/hello.php b/hello.php
new file mode 100644
index 0000000..d1a9166
--- /dev/null
+++ b/hello.php
@@ -0,0 +1,3 @@
+&lt;?php
+echo 'www.openwudi.com';
+?&gt;
</code></pre>

<h4>git commit</h4>

<p>使用 git add 命令将想要快照的内容写入了缓存， 而执行 git commit 记录缓存区的快照。
Git 为你的每一个提交都记录你的名字与电子邮箱地址，所以第一步需要配置用户名和邮箱地址。</p>

<pre><code>$ git config --global user.name 'openwudi'
$ git config --global user.email xxx@openwudi.com
</code></pre>

<p>接下来我们写入缓存，并提交对 hello.php 的所有改动。在首个例子中，我们使用 -m 选项以在命令行中提供提交注释。</p>

<pre><code>$ git add hello.php
$ git status -s
A  README
A  hello.php
$ git commit -m 'test comment from openwudi.com'
[master (root-commit) 85fc7e7] test comment from openwudi.com
 2 files changed, 4 insertions(+)
 create mode 100644 README
 create mode 100644 hello.php
</code></pre>

<p>现在我们已经记录了快照。如果我们再执行 git status:</p>

<pre><code>$ git status
# On branch master
nothing to commit (working directory clean)
</code></pre>

<p>以上输出说明我们在最近一次提交之后，没有做任何改动，是一个"干净的工作目录"。</p>

<p>如果你觉得 git add 提交缓存的流程太过繁琐，Git 也允许你用 -a 选项跳过这一步。命令格式如下：</p>

<pre><code>git commit -a
</code></pre>

<h4>git reset HEAD</h4>

<p>git reset HEAD 命令用于取消缓存已缓存的内容。
这里我们有两个最近提交之后又有所改动的文件。我们将两个都缓存，并取消缓存其中一个。</p>

<pre><code>$ git status -s
 M README
 M hello.php
$ git add .
$ git status -s
 M  README
 M  hello.pp
$ git reset HEAD -- hello.php
 Unstaged changes after reset:
 M hello.php
$ git status -s
 M  README
 M hello.php
</code></pre>

<p>现在你执行 git commit 将只记录 README 文件的改动，并不含现在并不在缓存中的 hello.pp。</p>

<h4>git rm</h4>

<p>git rm 将文件从缓存区中移除。如我们删除 hello.php文件：</p>

<pre><code>$ git rm hello.php
rm 'hello.php'
$ ls
README
</code></pre>

<p>默认情况下，git rm file 会将文件从缓存区和你的硬盘中（工作目录）删除。 如果要在工作目录中留着该文件，可以使用命令：</p>

<pre><code>git rm --cached
</code></pre>

<h4>git mv</h4>

<p>git mv 命令做得所有事情就是 git rm &ndash;cached， 重命名磁盘上的文件，然后再执行 git add 把新文件添加到缓存区。因此，虽然有 git mv 命令，但它有点多余 。</p>

<h2>Git 分支管理</h2>

<h4>创建分支命令:</h4>

<pre><code>git branch (branchname)
</code></pre>

<h4>切换分支命令:</h4>

<pre><code>git checkout (branchname)
</code></pre>

<p>当你切换分支的时候，Git 会用该分支的最后提交的快照替换你的工作目录的内容， 所以多个分支不需要多个目录。</p>

<h4>合并分支命令:</h4>

<pre><code>git merge
</code></pre>

<p>你可以多次合并到统一分支， 也可以选择在合并之后直接删除被并入的分支。</p>

<h4>列出分支基本命令:</h4>

<pre><code>git branch
</code></pre>

<p>没有参数时，git branch 会列出你在本地的分支。</p>

<pre><code>$ git branch
* master
</code></pre>

<p>此例的意思就是，我们有一个叫做"master"的分支，并且该分支是当前分支。
当你执行 git init 的时候，缺省情况下 Git 就会为你创建"master"分支。
如果我们要手动创建一个分支，并切换过去。执行 git branch (branchname) 即可。</p>

<pre><code>$ git branch testing
$ git branch
* master
  testing
</code></pre>

<p>现在我们可以看到，有了一个新分支 testing。
当你以此方式在上次提交更新之后创建了新分支，如果后来又有更新提交， 然后又切换到了"testing"分支，Git 将还原你的工作目录到你创建分支时候的样子
接下来我们将演示如何切换分支，我们用 git checkout (branch) 切换到我们要修改的分支。</p>

<pre><code>$ ls
README
$ echo 'openwudi.com' &gt; test.txt
$ git add .
$ git commit -m 'add test.txt'
[master 048598f] add test.txt
 2 files changed, 1 insertion(+), 3 deletions(-)
 delete mode 100644 hello.php
 create mode 100644 test.txt
$ ls
README      test.txt
$ git checkout testing
Switched to branch 'testing'
$ ls
README      hello.php
</code></pre>

<p>当我们切换到"testing"分支的时候，我们添加的新文件test.txt被移除了, 原来被删除的文件hello.php文件又出现了。切换回"master"分支的时候，它们有重新出现了。</p>

<pre><code>$ git checkout master
Switched to branch 'master'
$ ls
README      test.txt
</code></pre>

<p>我们也可以使用 git checkout -b (branchname) 命令来创建新分支并立即切换到该分支下，从而在该分支中操作。</p>

<pre><code>$ git checkout -b newtest
Switched to a new branch 'newtest'
$ git rm test2.txt
rm 'test2.txt'
$ ls
README      test.txt
$ git commit -am 'removed test2.txt'
[newtest 556f0a0] removed test2.txt
 1 file changed, 1 deletion(-)
 delete mode 100644 test2.txt
$ git checkout master
Switched to branch 'master'
$ ls
README      test.txt    test2.txt
</code></pre>

<p>如你所见，我们创建了一个分支，在该分支的上下文中移除了一些文件，然后切换回我们的主分支，那些文件又回来了。
使用分支将工作切分开来，从而让我们能够在不同上下文中做事，并来回切换。</p>

<h4>删除分支命令:</h4>

<pre><code>git branch -d (branchname)
</code></pre>

<h4>分支合并:</h4>

<pre><code>git merge (branchname)
</code></pre>

<h4>合并冲突:</h4>

<p>合并并不仅仅是简单的文件添加、移除的操作，Git 也会合并修改。</p>

<pre><code>$ git branch
* master
$ cat test.txt
openwudi.com
</code></pre>

<p>首先，我们创建一个叫做"change_site"的分支，切换过去，我们将内容改为 www.openwudi.com 。</p>

<pre><code>$ git checkout -b change_site
Switched to a new branch 'change_site'
$ vim test.txt
$ head -1 test.txt
www.openwudi.com
$ git commit -am 'changed the site'
[change_site d7e7346] changed the site
 1 file changed, 1 insertion(+), 1 deletion(-)
</code></pre>

<p>将修改的内容提交到 &ldquo;change_site&rdquo; 分支中。 现在，假如切换回 &ldquo;master&rdquo; 分支我们可以看内容恢复到我们修改前的，我们再次修改test.txt文件。</p>

<pre><code>$ git checkout master
Switched to branch 'master'
$ head -1 test.txt
openwudi.com
$ vim test.txt
$ cat test.txt
openwudi.com
新增加一行
$ git diff
diff --git a/test.txt b/test.txt
index 704cce7..f84c2a4 100644
--- a/test.txt
+++ b/test.txt
@@ -1 +1,2 @@
 openwudi.com
+新增加一行
$ git commit -am '新增加一行'
[master 14b4dca] 新增加一行
 1 file changed, 1 insertion(+)
</code></pre>

<p>现在这些改变已经记录到我的 &ldquo;master&rdquo; 分支了。接下来我们将 &ldquo;change_site&rdquo; 分支合并过来。</p>

<pre><code>$ git merge change_site
Auto-merging test.txt
CONFLICT (content): Merge conflict in test.txt
Automatic merge failed; fix conflicts and then commit the result.
$ cat test.txt
&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
openwudi.com
新增加一行
=======
www.openwudi.com
&gt;&gt;&gt;&gt;&gt;&gt;&gt; change_site
</code></pre>

<p>我们将前一个分支合并到 &ldquo;master&rdquo; 分支，一个合并冲突就出现了，接下来我们需要手动去修改它。</p>

<pre><code>$ vim test.txt
$ cat test.txt
www.openwudi.com
新增加一行
$ git diff
diff --cc test.txt
index f84c2a4,bccb7c2..0000000
--- a/test.txt
+++ b/test.txt
@@@ -1,2 -1,1 +1,2 @@@
- openwudi.com
+ www.openwudi.com
 +新增加一行
</code></pre>

<p>在 Git 中，我们可以用 git add 要告诉 Git 文件冲突已经解决</p>

<pre><code>$ git status -s
UU test.txt
$ git add test.txt 
$ git status -s
M  test.txt
$ git commit
[master 88afe0e] Merge branch 'change_site'
</code></pre>

<p>现在我们成功解决了合并中的冲突，并提交了结果。</p>

<h2>Git 查看提交历史</h2>

<p>回顾下提交历史，我们可以使用 git log 命令查看。</p>

<pre><code>git log
</code></pre>

<p>可以用 &ndash;oneline 选项来查看历史记录的简洁的版本。</p>

<pre><code>git log --oneline
</code></pre>

<p>还可以用 &ndash;graph 选项，查看历史中什么时候出现了分支、合并。以下为相同的命令，开启了拓扑图选项：</p>

<pre><code>git log --oneline --graph
</code></pre>

<p>用 &lsquo;&ndash;reverse'参数来逆向显示所有日志。</p>

<pre><code>git log --reverse --oneline
</code></pre>

<p>查找指定用户的提交日志可以使用命令：git log &ndash;author</p>

<pre><code>git log --author=openwudi --oneline -5
</code></pre>

<p>指定日期，可以执行几个选项：&ndash;since 和 &ndash;before，但是你也可以用 &ndash;until 和 &ndash;after。</p>

<p>更多 git log 命令可查看：<a href="http://git-scm.com/docs/git-log">http://git-scm.com/docs/git-log</a></p>

<h2>Git 标签</h2>

<p>如果你达到一个重要的阶段，并希望永远记住那个特别的提交快照，你可以使用 git tag 给它打上标签。
-a 选项意为"创建一个带注解的标签"。 不用 -a 选项也可以执行的，但它不会记录这标签是啥时候打的，谁打的，也不会让你添加个标签的注解。 我推荐一直创建带注解的标签。</p>

<pre><code>git tag -a v1.0
</code></pre>

<p>当你执行 git tag -a 命令时，Git 会打开你的编辑器，让你写一句标签注解，就像你给提交写注解一样。</p>

<p>现在，注意当我们执行 git log &ndash;decorate 时，我们可以看到我们的标签了。</p>

<p>如果我们要查看所有标签可以使用以下命令：</p>

<pre><code>$ git tag
v0.9
v1.0
</code></pre>

<h2>Git 远程仓库</h2>

<p>Git 并不像 SVN 那样有个中心服务器。
目前我们使用到的 Git 命令都是在本地执行，如果你想通过 Git 分享你的代码或者与其他开发人员合作。 你就需要将数据放到一台其他开发人员能够连接的服务器上。</p>

<h3>添加远程库</h3>

<p>要添加一个新的远程仓库，可以指定一个简单的名字，以便将来引用,命令格式如下：</p>

<pre><code>git remote add [shortname] [url]
</code></pre>

<h3>查看当前的远程库</h3>

<p>查看当前配置有哪些远程仓库，可以用命令：</p>

<pre><code>git remote
</code></pre>

<p>执行时加上 -v 参数，你还可以看到每个别名的实际链接地址。</p>

<h3>提取远程仓库</h3>

<p>Git 有两个命令用来提取远程仓库的更新。</p>

<p>1、从远程仓库下载新分支与数据：</p>

<pre><code>git fetch
</code></pre>

<p>该命令执行完后需要执行git merge 远程分支到你所在的分支。</p>

<p>2、从远端仓库提取数据并尝试合并到当前分支：</p>

<pre><code>git pull
</code></pre>

<h3>推送到远程仓库</h3>

<p>推送你的新分支与数据到某个远端仓库命令:</p>

<pre><code>git push [alias] [branch]
</code></pre>

<h3>删除远程仓库</h3>

<p>删除远程仓库你可以使用命令：</p>

<pre><code>git remote rm [alias]
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android Tips Round-Up]]></title>
    <link href="http://wodis.github.io/blog/2014/06/27/android-tips-round-up/"/>
    <updated>2014-06-27T15:20:27+08:00</updated>
    <id>http://wodis.github.io/blog/2014/06/27/android-tips-round-up</id>
    <content type="html"><![CDATA[<p><a href="http://developer.android.com/reference/android/app/Activity.html#startActivities(android.content.Intent[])">Activity.startActivities()</a> - Nice for launching to the middle of an app flow.</p>

<p><a href="http://developer.android.com/reference/android/text/TextUtils.html#isEmpty(java.lang.CharSequence)">TextUtils.isEmpty()</a> - Simple utility I use everywhere.</p>

<p><a href="http://developer.android.com/reference/android/text/Html.html#fromHtml(java.lang.String)">Html.fromHtml()</a> - Quick method for formatting Html. It&rsquo;s not particularly fast so I wouldn&rsquo;t use it constantly (e.g., don&rsquo;t use it just to bold part of a string - construct the Spannable manually instead), but it&rsquo;s fine for rendering text obtained from the web.</p>

<p><a href="http://developer.android.com/reference/android/widget/TextView.html#setError%28java.lang.CharSequence%29">TextView.setError()</a> - Nice UI when validating user input.</p>

<p><a href="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html">Build.VERSION_CODES</a> - Not only is it handy for routing code, it&rsquo;s also summarizes behavioral differences between each version of Android.</p>

<p><a href="http://developer.android.com/reference/android/util/Log.html#getStackTraceString(java.lang.Throwable)">Log.getStackTraceString()</a> - Convenience utility for logging.</p>

<p><a href="http://developer.android.com/reference/android/view/LayoutInflater.html#from%28android.content.Context%29">LayoutInflater.from()</a> - Wraps the long-winded getSystemService() call in a simple utility.</p>

<p><a href="http://developer.android.com/reference/android/view/ViewConfiguration.html#getScaledTouchSlop%28%29">ViewConfiguration.getScaledTouchSlop()</a> - Using the values provided in ViewConfiguration ensures all touch interaction feels consistent across the OS.</p>

<p><a href="http://developer.android.com/reference/android/telephony/PhoneNumberUtils.html#convertKeypadLettersToDigits%28java.lang.String%29">PhoneNumberUtils.convertKeypadLettersToDigits</a> - Makes handling phone number data a snap, as some companies provide them as letters.</p>

<p><a href="http://developer.android.com/reference/android/content/Context.html#getCacheDir%28%29">Context.getCacheDir()</a> - Use the cache dir for caching data. Simple enough but some don&rsquo;t know it exists.</p>

<p><a href="http://developer.android.com/reference/android/animation/ArgbEvaluator.html">ArgbEvaluator</a> - Transition from one color to another. As was pointed out by Chris Banes, this class creates a lot of autoboxing churn so it&rsquo;d be better to just rip out the logic and run it yourself.</p>

<p><a href="http://developer.android.com/reference/android/view/ContextThemeWrapper.html">ContextThemeWrapper</a> - Nice class for changing the theme of a Context on the fly.</p>

<p><a href="http://developer.android.com/reference/android/widget/Space.html">Space</a> - Lightweight View which skips drawing. Great for any situation that might require a placeholder.</p>

<p><a href="http://developer.android.com/reference/android/animation/ValueAnimator.html#reverse%28%29">ValueAnimator.reverse()</a> - I love this for canceling animations smoothly.</p>

<p><a href="http://developer.android.com/reference/android/text/format/DateUtils.html#formatDateTime%28android.content.Context,%20long,%20int%29">DateUtils.formatDateTime()</a> - One-stop shop for localized date/time strings.</p>

<p><a href="http://developer.android.com/reference/android/app/AlarmManager.html#setInexactRepeating(int,long,long,android.app.PendingIntent)">AlarmManager.setInexactRepeating</a> - Saves on battery life by grouping multiple alarms together. Even if you&rsquo;re only calling a single alarm this is better (just make sure to call AlarmManager.cancel() when done).</p>

<p><a href="http://developer.android.com/reference/android/text/format/Formatter.html#formatFileSize(android.content.Context,long)">Formatter.formatFileSize()</a> - A localized file size formatter.</p>

<p><a href="http://developer.android.com/reference/android/app/ActionBar.html#hide()">ActionBar.hide()/.show()</a> - Animates the action bar hiding/showing. Lets you switch to full-screen gracefully.</p>

<p><a href="http://developer.android.com/reference/android/text/util/Linkify.html#addLinks(android.text.Spannable,int)">Linkify.addLinks()</a> - If you need to control how links are added to text.</p>

<p><a href="http://developer.android.com/reference/android/text/StaticLayout.html">StaticLayout</a> - Useful for measuring text that you&rsquo;re about to render into a custom View.</p>

<p><a href="http://developer.android.com/reference/android/app/Activity.html#onBackPressed()">Activity.onBackPressed()</a> - Easy way to manage the back button. While I wouldn&rsquo;t normally hijack back, sometimes it&rsquo;s necessary to make a flow work.</p>

<p><a href="http://developer.android.com/reference/android/view/GestureDetector.html">GestureDetector</a> - Listens to motion events and fires listener events for common actions (like clicks, scrolls and flings). So much easier than implementing your own motion event system.</p>

<p><a href="http://developer.android.com/reference/android/graphics/DrawFilter.html">DrawFilter</a> - Lets you manipulate a Canvas even if you&rsquo;re not calling the draw commands. For example, you could create a custom View which sets a DrawFilter which anti-aliases the draws of the parent View.</p>

<p><a href="http://developer.android.com/reference/android/app/ActivityManager.html#getMemoryClass()">ActivityManager.getMemoryClass()</a> - Gives you an idea of how much memory the device has. Great for figuring out how large to make your caches.</p>

<p><a href="http://developer.android.com/reference/android/os/SystemClock.html#sleep(long)">SystemClock.sleep()</a> - Convenience method which guarantees sleeping the amount of time entered. I use it for debugging and simulating network delays.</p>

<p><a href="http://developer.android.com/reference/android/view/ViewStub.html">ViewStub</a> - A View that initially does nothing, but can later inflate a layout. This is a great placeholder for lazy-loading Views. Its only drawback is that it doesn&rsquo;t support <merge> tags, so it can create unnecessary nesting in the hierarchy if you&rsquo;re not careful.</p>

<p><a href="http://developer.android.com/reference/android/util/DisplayMetrics.html#density">DisplayMetrics.density</a> - You can get the density of the screen this way. Most of the time you&rsquo;ll be better off letting the system scale dimensions automatically, but occasionally it&rsquo;s useful to have more control (especially with custom Views).</p>

<p><a href="http://developer.android.com/reference/android/util/Pair.html#create(A,B)">Pair.create()</a> - Handy class, handy creator method.</p>

<p><a href="http://developer.android.com/reference/android/net/UrlQuerySanitizer.html">UrlQuerySanitizer</a> - Sanitize URLs with this handy utility.</p>

<p><a href="http://developer.android.com/reference/android/app/Fragment.html#setArguments%28android.os.Bundle%29">Fragment.setArguments</a> - Since you can&rsquo;t use a Fragment constructor w/ parameters this is the second best thing. Arguments set before creation last throughout the entire Fragment&rsquo;s lifecycle (even if it&rsquo;s destroyed/recreated due to a configuration change).</p>

<p><a href="http://developer.android.com/reference/android/app/DialogFragment.html#setShowsDialog%28boolean%29">DialogFragment.setShowsDialog()</a> - Neat trick - DialogFragments can act like normal Fragments! That way you can have the same Fragment do double-duty. I usually create a third View generation method that both onCreateView() and onCreateDialog() call into when creating a dual-purpose Fragment.</p>

<p><a href="http://developer.android.com/reference/android/app/FragmentManager.html#enableDebugLogging%28boolean%29">FragmentManager.enableDebugLogging()</a> - Help when you need it when figuring out Fragments.</p>

<p><a href="http://developer.android.com/reference/android/support/v4/content/LocalBroadcastManager.html">LocalBroadcastManager</a> - Safer than global broadcasts. Simple and quick. Event buses like otto may make more sense for your use case though.</p>

<p><a href="http://developer.android.com/reference/android/telephony/PhoneNumberUtils.html#formatNumber%28java.lang.String%29">PhoneNumberUtils.formatNumber()</a> - Let someone else figure out this problem for you.</p>

<p><a href="http://developer.android.com/reference/android/graphics/Region.html#op%28android.graphics.Region,%20android.graphics.Region,%20android.graphics.Region.Op%29">Region.op()</a> - I found this useful for comparing two generic areas before rendering. If I&rsquo;ve got two Paths, do they overlap? I can figure that out with this method.</p>

<p><a href="http://developer.android.com/reference/android/app/Application.html#registerActivityLifecycleCallbacks%28android.app.Application.ActivityLifecycleCallbacks%29">Application.registerActivityLifecycleCallbacks</a> - Though lacking documentation I feel this is self-evident. Just a handy tool.</p>

<p><a href="http://tools.android.com/tech-docs/new-build-system/user-guide#TOC-Build-Types">versionNameSuffix</a> - This gradle setting lets you modify the versionName field in your manifest based on different build types. For example, I would setup my debug build type to end in &ldquo;-SNAPSHOT&rdquo;; that way you can easily tell if you&rsquo;re on a debug build or release build.</p>

<p><a href="http://developer.android.com/reference/android/database/CursorJoiner.html">CursorJoiner</a> - If you&rsquo;re using a single database then a join in SQL is the natural solution, but what if you&rsquo;ve received data from two separate ContentProviders? In that case CursorJoiner can be helpful.</p>

<p><a href="http://www.genymotion.com/">Genymotion</a> - A much faster Android emulator. I use it all day.</p>

<p><a href="http://developer.android.com/guide/practices/screens_support.html#qualifiers">-nodpi</a> - Most qualifiers (-mdpi, -hdpi, -xhdpi, etc.) automatically scale assets/dimensions if you&rsquo;re on a device that isn&rsquo;t explicitly defined. Sometimes you just want something consistent though; in that case use -nodpi.</p>

<p><a href="http://developer.android.com/reference/android/content/BroadcastReceiver.html#setDebugUnregister%28boolean%29">BroadcastRecevier.setDebugUnregister()</a> - Another handy debugging tool.</p>

<p><a href="http://developer.android.com/reference/android/app/Activity.html#recreate%28%29">Activity.recreate()</a> - Forces an Activity to recreate itself for whatever reason.</p>

<p><a href="http://developer.android.com/reference/android/content/pm/PackageManager.html#checkSignatures%28java.lang.String,%20java.lang.String%29">PackageManager.checkSignatures()</a> - You can use this to find out if two apps (presumably your own) are installed at the same time. Without checking signatures someone could imitate your app easily by just using the same package name.</p>

<p><a href="http://developer.android.com/reference/android/app/Activity.html#isChangingConfigurations%28%29">Activity.isChangingConfigurations()</a> - Often times you don&rsquo;t need to do quite as much saving of state if all that&rsquo;s happening is the configuration is changing.</p>

<p><a href="http://developer.android.com/reference/android/content/SearchRecentSuggestionsProvider.html">SearchRecentSuggestionsProvider</a> - A quick and easy way to create a recents suggestion provider.</p>

<p><a href="http://developer.android.com/reference/android/view/ViewTreeObserver.html">ViewTreeObserver</a> - This is an amazing utility; it can be grabbed from any View and used to monitor the state of the View hierarchy. My most often use for it is to determine when Views have been measured (usually for animation purposes).</p>

<p><a href="https://www.timroes.de/2013/09/12/speed-up-gradle/">org.gradle.daemon=true</a> - Helps reduce the startup time of of Gradle builds. Only really applies to command-line builds as Android Studio already tries to use the daemon.</p>

<p><a href="http://developer.android.com/reference/android/database/DatabaseUtils.html">DatabaseUtils</a> - A variety of useful tools for database operations.</p>

<p><a href="http://developer.android.com/reference/android/widget/LinearLayout.html#attr_android:weightSum">android:weightSum (LinearLayout)</a> - Want to use layout weights, but don&rsquo;t want them to fill the entire LinearLayout? That&rsquo;s what weightSum can do by defining the total weight.</p>

<p><a href="http://developer.android.com/reference/android/view/View.html#attr_android:duplicateParentState">android:duplicateParentState (View)</a> - Makes the child duplicate the state of the parent - for example, if you&rsquo;ve got a ViewGroup that is clickable, then you can use this to make its children change state when it is clicked.</p>

<p><a href="http://developer.android.com/reference/android/view/ViewGroup.html#attr_android:clipChildren">android:clipChildren (ViewGroup)</a> - If disabled, this lets the children of a ViewGroup draw outside their parent&rsquo;s bounds. Great for animations.</p>

<p><a href="http://developer.android.com/reference/android/widget/ScrollView.html#attr_android:fillViewport">android:fillViewport (ScrollView)</a> - Best explained in this post, this helps solve a problem with ScrollViews that may not always have enough content to actually fill the height of the screen.</p>

<p><a href="http://developer.android.com/guide/topics/resources/drawable-resource.html#Bitmap">android:tileMode (BitmapDrawable)</a> - Lets you create repeated patterns with images.</p>

<p><a href="http://developer.android.com/reference/android/R.attr.html#exitFadeDuration">android:enterFadeDuration/android:exitFadeDuration (Drawables)</a> - For Drawables that have multiple states, this lets you define a fade before/after the drawable shows.</p>

<p><a href="http://developer.android.com/reference/android/widget/ImageView.html#attr_android:scaleType">android:scaleType (ImageView)</a> - Defines how to scale/crop a drawable within an ImageView. &ldquo;centerCrop&rdquo; and &ldquo;centerInside&rdquo; are regular settings for me.</p>

<p><a href="http://developer.android.com/training/improving-layouts/reusing-layouts.html#Merge"><merge></a> - Lets you include a layout in another without creating a duplicate ViewGroup (more info). Also good for custom ViewGroups; you can inflate a layout with <merge> inside the constructor to define its children automatically.</p>

<p><a href="http://developer.android.com/reference/android/util/AtomicFile.html">AtomicFile</a> - Manipulates a file atomically by using a backup file. I&rsquo;ve written this myself before, it&rsquo;s good to have an official (and better-written) version of it.</p>

<p><a href="https://developer.android.com/reference/android/support/v4/widget/ViewDragHelper.html">ViewDragHelper</a> - Dragging Views is a complex problem and this class helps a lot. If you want an example, DrawerLayout uses it for swiping. Flavient Laurent also wrote an excellent article about it.</p>

<p><a href="https://developer.android.com/reference/android/widget/PopupWindow.html">PopupWindow</a> - Used all around Android without you even realizing it (action bars, autocomplete, edittext errors), this class is the primary method for creating floating content.</p>

<p><a href="https://developer.android.com/reference/android/app/ActionBar.html#getThemedContext()">ActionBar.getThemedContext()</a> - ActionBar theming is surprisingly complex (and can be different from the theming of the rest of the Activity). This gets you a Context so if you create your own Views they will be properly themed.</p>

<p><a href="https://developer.android.com/reference/android/media/ThumbnailUtils.html">ThumbnailUtils</a> - Helps create thumbnails; in general I&rsquo;d just use whatever image library was already in place (e.g. Picasso or Volley), but it can also create video thumbnails!</p>

<p><a href="https://developer.android.com/reference/android/content/Context.html#getExternalFilesDir(java.lang.String)">Context.getExternalFilesDir()</a> - While you do have permission to write anywhere on the SD card if you ask for it, it&rsquo;s much more polite to write your data in the correct designated folder. That way it gets cleaned up and users get a common experience. Additionally, as of Kit Kat you can write to this folder without permission, and each user has their own external files dir.</p>

<p><a href="https://developer.android.com/reference/android/util/SparseArray.html">SparseArray</a> - A more efficient version of Map&lt;Integer, Object>. Be sure to check out sister classes SparseBooleanArray, SparseIntArray and SparseLongArray as well.</p>

<p><a href="https://developer.android.com/reference/android/content/pm/PackageManager.html#setComponentEnabledSetting(android.content.ComponentName,int,int)">PackageManager.setComponentEnabledSetting()</a> - Lets you enable/disable components in your app&rsquo;s manifest. What&rsquo;s nice here is being able to shut off unnecessary functionality - for example, a BroadcastReceiver that is unnecessary due to the current app configuration.</p>

<p><a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase.html#yieldIfContendedSafely()">SQLiteDatabase.yieldIfContendedSafely()</a> - Lets you temporarily stop a db transaction so you don&rsquo;t tie up too much of the system.</p>

<p><a href="https://developer.android.com/reference/android/os/Environment.html#getExternalStoragePublicDirectory(java.lang.String)">Environment.getExternalStoragePublicDirectory()</a> - Again, users like a consistent experience with their SD card; using this method will grab the correct directory for placing typed files (music, pictures, etc.) on their drive.</p>

<p><a href="https://developer.android.com/reference/android/view/View.html#generateViewId()">View.generateViewId()</a> - Every once in a while I&rsquo;ve wanted to dynamically generate view IDs. The problem is ensuring you aren&rsquo;t clobbering existing IDs (or other generated ones).</p>

<p><a href="https://developer.android.com/reference/android/app/ActivityManager.html#clearApplicationUserData()">ActivityManager.clearApplicationUserData()</a> - A reset button for your app. Perhaps the easiest way to log out a user, ever.</p>

<p><a href="http://developer.android.com/reference/android/content/Context.html#createConfigurationContext(android.content.res.Configuration)">Context.createConfigurationContext()</a> - Customize your configuration context. Common problem I&rsquo;ve run into: forcing part of an app to render in a particular locale (not that I normally condone this sort of behavior, but you never know). This would make it a lot easier to do so.</p>

<p><a href="http://developer.android.com/reference/android/app/ActivityOptions.html">ActivityOptions</a> - Nice custom animations when moving between Activities. ActivityOptionsCompat is good for backwards compatible functionality.</p>

<p><a href="http://developer.android.com/reference/android/widget/AdapterViewFlipper.html#fyiWillBeAdvancedByHostKThx%28%29">AdapterViewFlipper.fyiWillBeAdvancedByHostKThx()</a> - Because it&rsquo;s funny and for no other reason. There are other amusing tidbits in AOSP (like GRAVITY_DEATH_STAR_I) but unlike those this one is actually useful.</p>

<p><a href="http://developer.android.com/reference/android/view/ViewParent.html#requestDisallowInterceptTouchEvent%28boolean%29">ViewParent.requestDisallowInterceptTouchEvent()</a> - The Android touch event system defaults handle what you want most of the time, but sometimes you need this method to wrest event control from parents. (By the way, if you want to know about the touch system, this talk is amazing.)</p>
]]></content>
  </entry>
  
</feed>
